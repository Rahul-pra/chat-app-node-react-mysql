[{"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/index.js":"1","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reportWebVitals.js":"2","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/actions/auth.js":"3","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/services/auth.service.js":"4","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/Config.js":"5","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/App.js":"6","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/components/Chat.js":"7","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/helpers/history.js":"8","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/store.js":"9","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/actions/types.js":"10","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reducers/auth.js":"11","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/actions/message.js":"12","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reducers/message.js":"13","/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reducers/index.js":"14","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/App.js":"15","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/actions/auth.js":"16","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/helpers/history.js":"17","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/Config.js":"18","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/reducers/message.js":"19","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/components/Chat.js":"20","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/index.js":"21","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/actions/types.js":"22","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/reducers/auth.js":"23"},{"size":616,"mtime":1614055157000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1614055157000,"results":"26","hashOfConfig":"25"},{"size":930,"mtime":1621595348962,"results":"27","hashOfConfig":"25"},{"size":483,"mtime":1621529150532,"results":"28","hashOfConfig":"25"},{"size":146,"mtime":1621489575718,"results":"29","hashOfConfig":"25"},{"size":1810,"mtime":1621595316823,"results":"30","hashOfConfig":"25"},{"size":17073,"mtime":1621590965819,"results":"31","hashOfConfig":"25"},{"size":95,"mtime":1614055157000,"results":"32","hashOfConfig":"25"},{"size":357,"mtime":1614055157000,"results":"33","hashOfConfig":"25"},{"size":209,"mtime":1621595360362,"results":"34","hashOfConfig":"25"},{"size":731,"mtime":1621595390557,"results":"35","hashOfConfig":"25"},{"size":277,"mtime":1614055157000,"results":"36","hashOfConfig":"25"},{"size":373,"mtime":1614055157000,"results":"37","hashOfConfig":"25"},{"size":157,"mtime":1621274384776,"results":"38","hashOfConfig":"25"},{"size":1810,"mtime":1621595316823,"results":"39","hashOfConfig":"40"},{"size":930,"mtime":1621595348962,"results":"41","hashOfConfig":"40"},{"size":95,"mtime":1614055157000,"results":"42","hashOfConfig":"40"},{"size":146,"mtime":1621489575718,"results":"43","hashOfConfig":"40"},{"size":373,"mtime":1614055157000,"results":"44","hashOfConfig":"40"},{"size":18858,"mtime":1621749471722,"results":"45","hashOfConfig":"40"},{"size":616,"mtime":1614055157000,"results":"46","hashOfConfig":"40"},{"size":209,"mtime":1621595360362,"results":"47","hashOfConfig":"40"},{"size":731,"mtime":1621595390557,"results":"48","hashOfConfig":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1aea28n",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13e7yxv",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/index.js",[],["100","101"],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reportWebVitals.js",[],["102","103"],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/actions/auth.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/services/auth.service.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/Config.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/App.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/components/Chat.js",["104","105","106","107"],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/helpers/history.js",[],["108","109"],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/store.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/actions/types.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reducers/auth.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/actions/message.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reducers/message.js",[],"/home/acquaint/projects/RahulDemo/chatApp/Reactjs/src/reducers/index.js",[],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/App.js",[],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/actions/auth.js",[],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/helpers/history.js",[],["110","111"],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/Config.js",[],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/reducers/message.js",[],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/components/Chat.js",["112","113","114","115"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport socketIOClient from \"socket.io-client\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport config from \"../Config\";\n\nimport { chatInit } from \"../actions/auth\";\n\nconst endPoint = config.ENDPOINT;\nconst socket = socketIOClient(endPoint, { transports: ['websocket'] });\n\n/**\n * require validation\n * @param {*} value \n */\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\n\nconst Chat = (props) => {\n    const { user: currentUser } = useSelector((state) => state.auth);\n\n    const checkBtn = useRef();\n    const form = useRef();\n    const bottomRef = useRef();\n\n\n    const [name, setName] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n    const [messages, setMessages] = useState([]);\n    const [loginUser, setLoginUser] = useState(\"\");\n    const [userList, setUserList] = useState(\"\");\n    const [selectedUser, setSelectedUser] = useState(\"\");\n    const [newMessage, setNewMessage] = useState(\"\");\n    const [changeName, setChangeName] = useState(\"\");\n    //const Array = [5, 4, 3, 2, 1]\n\n\n    const scrollToBottom = () => {\n        // bottomRef.current.scrollIntoView({\n        //     behavior: \"smooth\",\n        //     block: \"start\",\n        // });\n    };\n\n    /**\n   * Start chat\n   * @param {*} e \n   */\n    const startChat = (e) => {\n        e.preventDefault();\n\n        setLoading(true);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            let setData = {\n                name: name,\n            }\n            dispatch(chatInit(setData))\n                .then(() => {\n                    props.history.push(\"/\");\n                    window.location.reload();\n                })\n                .catch(() => {\n                    setLoading(false);\n                });\n        } else {\n            setLoading(false);\n        }\n    };\n\n    // if (!currentUser) {\n    //     return <Redirect to=\"/login\" />;\n    // }\n\n    // useEffect(() => {\n\n\n\n    //     console.log(\"socket ==>\", socket)\n    //     socket.on(\"FromAPI\", () => {\n    //         console.log(\"call ==>\", socket)\n    //         //setMessaege(data);\n    //     });\n\n    //     // CLEAN UP THE EFFECT\n    //     //return () => socket.disconnect();\n    //     //\n    // }, []);\n    const handleNewMessage = () => {\n        console.log('emitting new message', newMessage);\n        let setMessage = {\n            fromUserId: loginUser.id,\n            message: newMessage,\n            toUserId: selectedUser.id\n        }\n        socket.emit('message', setMessage);\n    }\n\n    const chatWithUser = (chatWithUser) => {\n        setSelectedUser(chatWithUser)\n        setNewMessage(\"\")\n        scrollToBottom()\n        let setMessage = {\n            fromUserId: loginUser.id,\n            toUserId: chatWithUser.id\n        }\n        socket.emit('getMessages', setMessage);\n    }\n\n    const disconnectSocket = () => {\n        console.log('Disconnecting socket...');\n        if (socket) socket.disconnect();\n    }\n\n    const changeNameHandlar = () => {\n        //console.log(\"changeName ==>\", changeName)\n        let data = {\n            name: changeName,\n            id: loginUser.id\n        }\n        socket.emit('changeName', data);\n    }\n\n    useEffect(() => {\n\n        for (let j = 5; j >= 0; j--) {\n            var v = []\n            for (let index = 5; index > j; index--) {\n                //console.log(index);\n                v.push(index)\n                //const element = array[index];\n\n            }\n            console.log(\"var ==>\", v.toString().replaceAll(\",\", \"\"))\n        }\n\n    }, [])\n\n    useEffect(() => {\n        if (currentUser) {\n            socket.emit('addUser', currentUser.data);\n            socket.on('addUserResponce', payload => {\n                setLoginUser(payload)\n                //setUserList(payload.userList)\n            });\n            socket.on('userListResponce', payload => {\n                //console.log(\"payload ==>\", payload)\n                //setLoginUser(payload.loginUser)\n                setUserList(payload)\n            });\n            socket.on('messageResponce', payload => {\n                //console.log(\"payload\", payload)\n                setMessages(payload.data)\n                setNewMessage(\"\")\n            });\n            socket.on('changeNameResponce', payload => {\n                console.log(\"payload ==>\", payload)\n            });\n            socket.on('getMessagesResponce', payload => {\n                //console.log(\"payload\", payload)\n                setMessages(payload.data)\n            });\n\n            return () => {\n                disconnectSocket();\n            }\n        }\n    }, []);\n\n    return (\n        <>\n            {currentUser ? (\n                <>\n                    <div className=\"container-fluid h-100\">\n                        <div className=\"row justify-content-center h-100\">\n                            <div className=\"col-md-4 col-xl-3 chat\"><div className=\"card mb-sm-3 mb-md-0 contacts_card\">\n                                <div className=\"card-header\">\n                                    <div className=\"input-group\">\n                                        {loginUser.name}\n                                        <input type=\"text\" placeholder=\"Change Name\" name=\"changeName\" className=\"form-control search\" value={changeName} onChange={(e) => setChangeName(e.target.value)} />\n                                        {/* <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text search_btn\"><i className=\"fas fa-search\"></i></span>\n                                        </div> */}\n                                        <button className=\"btn btn-primary btn-block\" onClick={() => changeNameHandlar()}> Change name </button>\n                                    </div>\n                                </div>\n                                <div className=\"card-body contacts_body\">\n                                    <ul className=\"contacts\">\n                                        {userList && userList.length > 0 && userList.map((user, i) => {\n                                            return (\n                                                <>\n                                                    {user.id !== loginUser.id &&\n                                                        <li className={selectedUser.id === user.id ? 'active' : ''} onClick={() => chatWithUser(user)} key={user.id}>\n                                                            <div className=\"d-flex bd-highlight\">\n                                                                <div className=\"img_cont\">\n                                                                    <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img\" />\n                                                                    <span className=\"online_icon\"></span>\n                                                                </div>\n                                                                <div className=\"user_info\">\n                                                                    <span>{user.name}</span>\n                                                                    <p>{user.userId} is {user.isOnline ? 'online' : 'offline'}</p>\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                    }\n                                                </>\n                                            )\n                                        })}\n\n                                        {/* <li>\n                                            <div className=\"d-flex bd-highlight\">\n                                                <div className=\"img_cont\">\n                                                    <img src=\"https://2.bp.blogspot.com/-8ytYF7cfPkQ/WkPe1-rtrcI/AAAAAAAAGqU/FGfTDVgkcIwmOTtjLka51vineFBExJuSACLcBGAs/s320/31.jpg\" className=\"rounded-circle user_img\" />\n                                                    <span className=\"online_icon offline\"></span>\n                                                </div>\n                                                <div className=\"user_info\">\n                                                    <span>Taherah Big</span>\n                                                    <p>Taherah left 7 mins ago</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div className=\"d-flex bd-highlight\">\n                                                <div className=\"img_cont\">\n                                                    <img src=\"https://i.pinimg.com/originals/ac/b9/90/acb990190ca1ddbb9b20db303375bb58.jpg\" className=\"rounded-circle user_img\" />\n                                                    <span className=\"online_icon\"></span>\n                                                </div>\n                                                <div className=\"user_info\">\n                                                    <span>Sami Rafi</span>\n                                                    <p>Sami is online</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div className=\"d-flex bd-highlight\">\n                                                <div className=\"img_cont\">\n                                                    <img src=\"http://profilepicturesdp.com/wp-content/uploads/2018/07/sweet-girl-profile-pictures-9.jpg\" className=\"rounded-circle user_img\" />\n                                                    <span className=\"online_icon offline\"></span>\n                                                </div>\n                                                <div className=\"user_info\">\n                                                    <span>Nargis Hawa</span>\n                                                    <p>Nargis left 30 mins ago</p>\n                                                </div>\n                                            </div>\n                                        </li>\n                                        <li>\n                                            <div className=\"d-flex bd-highlight\">\n                                                <div className=\"img_cont\">\n                                                    <img src=\"https://static.turbosquid.com/Preview/001214/650/2V/boy-cartoon-3D-model_D.jpg\" className=\"rounded-circle user_img\" />\n                                                    <span className=\"online_icon offline\"></span>\n                                                </div>\n                                                <div className=\"user_info\">\n                                                    <span>Rashid Samim</span>\n                                                    <p>Rashid left 50 mins ago</p>\n                                                </div>\n                                            </div>\n                                        </li> */}\n                                    </ul>\n                                </div>\n                                <div className=\"card-footer\"></div>\n                            </div></div>\n                            <div className=\"col-md-8 col-xl-6 chat\">\n                                <div className=\"card\">\n                                    <div className=\"card-header msg_head\">\n                                        <div className=\"d-flex bd-highlight\">\n                                            <div className=\"img_cont\">\n                                                <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img\" />\n                                                <span className=\"online_icon\"></span>\n                                            </div>\n                                            <div className=\"user_info\">\n                                                <span>Chat with {selectedUser.userId}</span>\n                                                {/* <p>1767 Messages</p> */}\n                                            </div>\n                                            <div className=\"video_cam\">\n                                                <span><i className=\"fas fa-video\"></i></span>\n                                                <span><i className=\"fas fa-phone\"></i></span>\n                                            </div>\n                                        </div>\n                                        <span id=\"action_menu_btn\"><i className=\"fas fa-ellipsis-v\"></i></span>\n                                        <div className=\"action_menu\">\n                                            <ul>\n                                                <li><i className=\"fas fa-user-circle\"></i> View profile</li>\n                                                <li><i className=\"fas fa-users\"></i> Add to close friends</li>\n                                                <li><i className=\"fas fa-plus\"></i> Add to group</li>\n                                                <li><i className=\"fas fa-ban\"></i> Block</li>\n                                            </ul>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"card-body msg_card_body\">\n\n                                        {selectedUser.id &&\n                                            <>\n                                                <div className=\"autoscroll-container\">\n                                                    {messages && messages.length > 0 && messages.map((msg, i) => {\n                                                        return (\n                                                            <div className={msg.fromUserId === loginUser.id ? 'd-flex justify-content-end mb-4' : 'd-flex justify-content-start mb-4'}>\n                                                                <div className=\"img_cont_msg\">\n                                                                    <img src=\"https://static.turbosquid.com/Preview/001292/481/WV/_D.jpg\" className=\"rounded-circle user_img_msg\" />\n                                                                </div>\n                                                                <div className=\"msg_cotainer\">\n                                                                    {msg.message}\n                                                                    {/* <span className=\"msg_time\">8:40 AM, Today</span> */}\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                    })}\n                                                    <div ref={bottomRef} className=\"list-bottom\"></div>\n                                                </div>\n                                            </>\n\n                                        }\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <div className=\"input-group\">\n                                            <div className=\"input-group-append\">\n                                                <span className=\"input-group-text attach_btn\"><i className=\"fas fa-paperclip\"></i></span>\n                                            </div>\n                                            <textarea name=\"newMessage\" className=\"form-control type_msg\" placeholder=\"Type your message...\" onChange={(e) => setNewMessage(e.target.value)} value={newMessage}>{newMessage}</textarea>\n                                            <div className=\"input-group-append\" onClick={() => handleNewMessage()}>\n                                                {/* <span className=\"input-group-text send_btn\"><i className=\"fa fa-location-arrow\"></i></span> */}\n                                                <button className=\"btn btn-primary btn-block\"> send </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <div className=\"col-md-12\">\n                        <div className=\"card card-container\">\n                            <Form onSubmit={startChat} ref={form}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Enter your name</label>\n                                    <Input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                        validations={[required]}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                                        {loading && (\n                                            <span className=\"spinner-border spinner-border-sm\"></span>\n                                        )}\n                                        <span>Start Chat</span>\n                                    </button>\n                                </div>\n                                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                            </Form>\n                        </div>\n                    </div>\n\n                </>\n            )\n            }\n\n        </>\n    );\n};\n\nexport default Chat;","/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/index.js",[],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/actions/types.js",[],"/home/acquaint/projects/RahulDemo/chat-app-node-react-mysql/chatApp/Reactjs/src/reducers/auth.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":142,"column":8,"nodeType":"124","endLine":142,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":166,"column":61,"nodeType":"128","endLine":166,"endColumn":169},{"ruleId":"126","severity":1,"message":"127","line":235,"column":49,"nodeType":"128","endLine":235,"endColumn":157},{"ruleId":"126","severity":1,"message":"127","line":267,"column":69,"nodeType":"128","endLine":267,"endColumn":181},{"ruleId":"116","replacedBy":"129"},{"ruleId":"118","replacedBy":"130"},{"ruleId":"116","replacedBy":"131"},{"ruleId":"118","replacedBy":"132"},{"ruleId":"122","severity":1,"message":"123","line":182,"column":8,"nodeType":"124","endLine":182,"endColumn":10,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"127","line":210,"column":69,"nodeType":"128","endLine":210,"endColumn":177},{"ruleId":"126","severity":1,"message":"127","line":281,"column":49,"nodeType":"128","endLine":281,"endColumn":157},{"ruleId":"126","severity":1,"message":"127","line":313,"column":69,"nodeType":"128","endLine":313,"endColumn":181},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["136"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["134"],["135"],["134"],["135"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},"Update the dependencies array to be: [currentUser]",{"range":"141","text":"142"},{"range":"143","text":"142"},[3849,3851],"[currentUser]",[5019,5021]]